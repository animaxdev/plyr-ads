!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define("PlyrAds",t):e.PlyrAds=t()}(this,function(){"use strict";var e={adTagUrl:"",skipButton:{enabled:!0,text:"Skip ad",delay:10}},t=(function(){function e(e){this.value=e}function t(t){function n(r,a){try{var o=t[r](a),s=o.value;s instanceof e?Promise.resolve(s.value).then(function(e){n("next",e)},function(e){n("throw",e)}):i(o.done?"return":"normal",o.value)}catch(e){i("throw",e)}}function i(e,t){switch(e){case"return":r.resolve({value:t,done:!0});break;case"throw":r.reject(t);break;default:r.resolve({value:t,done:!1})}(r=r.next)?n(r.key,r.arg):a=null}var r,a;this._invoke=function(e,t){return new Promise(function(i,o){var s={key:e,arg:t,resolve:i,reject:o,next:null};a?a=a.next=s:(r=a=s,n(e,t))})},"function"!=typeof t.return&&(this.return=void 0)}"function"==typeof Symbol&&Symbol.asyncIterator&&(t.prototype[Symbol.asyncIterator]=function(){return this}),t.prototype.next=function(e){return this._invoke("next",e)},t.prototype.throw=function(e){return this._invoke("throw",e)},t.prototype.return=function(e){return this._invoke("return",e)}}(),function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}),n=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r={getStartEvents:function(){var e=["click"];return(navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/Android/i))&&(e=["touchstart","touchend","touchmove"]),e},mergeConfig:function(e,t){return i({},e,t)}},a=function(){function i(n,a){if(t(this,i),this.config=r.mergeConfig(e,a),this.config.adTagUrl||!this.config.debug){if(window.google)this.plyr=n,this.startEvents=r.getStartEvents(),this.adDisplayContainer,this.adDisplayElement,this.adsManager,this.adsLoader,this.adCuePoints,this.videoElement=document.createElement("video"),this._setupAdDisplayContainer(),this._setupIMA(),this._setupListeners();else if(this.config.debug)throw new Error("The Google IMA3 SDK is not loaded.")}else if(this.config.debug)throw new Error("No adTagUrl provided.")}return n(i,[{key:"_setupIMA",value:function(){var e=this,t=this.plyr.elements.container;this.adsLoader=new google.ima.AdsLoader(this.adDisplayContainer,this.videoElement),this.adsLoader.getSettings().setAutoPlayAdBreaks(!1),this.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,function(t){return e._onAdsManagerLoaded(t)},!1),this.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR,function(t){return e._onAdError(t)},!1);var n=new google.ima.AdsRequest;n.adTagUrl=this.config.adTagUrl,n.linearAdSlotWidth=t.offsetWidth,n.linearAdSlotHeight=t.offsetHeight,n.nonLinearAdSlotWidth=t.offsetWidth,n.nonLinearAdSlotHeight=t.offsetHeight,this.adsLoader.requestAds(n)}},{key:"_onAdsManagerLoaded",value:function(e){var t=this,n=this.videoElement,i=new google.ima.AdsRenderingSettings;i.restoreCustomPlaybackStateOnAdBreakComplete=!0,i.enablePreloading=!0,this.adsManager=e.getAdsManager(n,i),this.adsCuePoints=this.adsManager.getCuePoints().filter(function(e){return e>0&&-1!==e}),this.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR,function(e){return t._onAdError(e)}),this.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED,function(e){return t._onAdEvent(e)}),this.adsManager.addEventListener(google.ima.AdEvent.Type.AD_BREAK_READY,function(e){return t._onAdEvent(e)}),this.adsManager.addEventListener(google.ima.AdEvent.Type.LOADED,function(e){return t._onAdEvent(e)}),this.adsManager.addEventListener(google.ima.AdEvent.Type.STARTED,function(e){return t._onAdEvent(e)}),this.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE,function(e){return t._onAdEvent(e)})}},{key:"_onAdEvent",value:function(e){var t=this.plyr.elements.container,n=e.getAd();switch(e.type){case google.ima.AdEvent.Type.LOADED:this.adDisplayElement.style.display="block",n.isLinear()||(n.width=t.offsetWidth,n.height=t.offsetHeight);break;case google.ima.AdEvent.Type.STARTED:this.plyr.pause();break;case google.ima.AdEvent.Type.AD_BREAK_READY:this.plyr.pause(),this.adsManager.start();break;case google.ima.AdEvent.Type.COMPLETE:this.adDisplayElement.style.display="none",this.plyr.currentTime<this.plyr.duration&&this.plyr.play();break;case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:}}},{key:"_onAdError",value:function(e){if(this.adDisplayElement.remove(),this.adsManager&&this.adsManager.destroy(),this.config.debug)throw console.log(e),new Error(e)}},{key:"_onContentPauseRequested",value:function(){this.plyr.pause()}},{key:"_onContentResumeRequested",value:function(){this.plyr.play()}},{key:"_setupAdDisplayContainer",value:function(){var e=this.plyr.elements.container;this.adDisplayContainer=new google.ima.AdDisplayContainer(e),this.adDisplayElement=e.firstChild,this.adDisplayElement.removeAttribute("style"),this.adDisplayElement.setAttribute("class","plyr-ads"),this._setOnClickHandler(this.adDisplayElement,this._playAds)}},{key:"_playAds",value:function(){var e=this.plyr.elements.container;this.adDisplayContainer.initialize();try{this.adsManager.init(e.offsetWidth,e.offsetHeight,google.ima.ViewMode.NORMAL),this.adsManager.start()}catch(e){if(this.plyr.play(),this.adDisplayElement.remove(),this.config.debug)throw new Error(e)}}},{key:"_setupListeners",value:function(){var e=this,t=this.plyr.elements.container,n=void 0;this.plyr.on("ended",function(t){e.adsLoader.contentComplete()}),this.plyr.on("timeupdate",function(t){var n=t.detail.plyr.currentTime;e.videoElement.currentTime=Math.ceil(n)}),this.plyr.on("seeking",function(e){return n=e.detail.plyr.currentTime}),this.plyr.on("seeked",function(t){for(var i=t.detail.plyr.currentTime,r=0;r<e.adsCuePoints.length;r++){var a=e.adsCuePoints[r];n<a&&a<i&&(e.adsManager.discardAdBreak(),e.adsCuePoints.splice(r,1))}}),window.addEventListener("resize",function(){e.adsManager.resize(t.offsetWidth,t.offsetHeight,google.ima.ViewMode.NORMAL)})}},{key:"_setOnClickHandler",value:function(e,t){var n=this,i=function(i){e.addEventListener(i,function(e){("touchend"===e.type&&"touchend"===i||"click"===e.type)&&t.call(n)},{once:!0})},r=!0,a=!1,o=void 0;try{for(var s,d=this.startEvents[Symbol.iterator]();!(r=(s=d.next()).done);r=!0){i(s.value)}}catch(e){a=!0,o=e}finally{try{!r&&d.return&&d.return()}finally{if(a)throw o}}}},{key:"on",value:function(e,t){return r.on(this.elements.container,e,t),this}}]),i}();return{init:function(e,t){return new a(e,t)}}});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
